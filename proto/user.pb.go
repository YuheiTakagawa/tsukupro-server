// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// confirm between server
type User struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birth                string   `protobuf:"bytes,3,opt,name=birth,proto3" json:"birth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_75fc1a8a594214fa, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetBirth() string {
	if m != nil {
		return m.Birth
	}
	return ""
}

type Proreq struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proreq) Reset()         { *m = Proreq{} }
func (m *Proreq) String() string { return proto.CompactTextString(m) }
func (*Proreq) ProtoMessage()    {}
func (*Proreq) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_75fc1a8a594214fa, []int{1}
}
func (m *Proreq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proreq.Unmarshal(m, b)
}
func (m *Proreq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proreq.Marshal(b, m, deterministic)
}
func (dst *Proreq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proreq.Merge(dst, src)
}
func (m *Proreq) XXX_Size() int {
	return xxx_messageInfo_Proreq.Size(m)
}
func (m *Proreq) XXX_DiscardUnknown() {
	xxx_messageInfo_Proreq.DiscardUnknown(m)
}

var xxx_messageInfo_Proreq proto.InternalMessageInfo

func (m *Proreq) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Proreq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Proreq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Proreq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// uses only in response
type Status struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_75fc1a8a594214fa, []int{2}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ProreqList struct {
	Req                  []*Proreq `protobuf:"bytes,1,rep,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProreqList) Reset()         { *m = ProreqList{} }
func (m *ProreqList) String() string { return proto.CompactTextString(m) }
func (*ProreqList) ProtoMessage()    {}
func (*ProreqList) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_75fc1a8a594214fa, []int{3}
}
func (m *ProreqList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProreqList.Unmarshal(m, b)
}
func (m *ProreqList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProreqList.Marshal(b, m, deterministic)
}
func (dst *ProreqList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProreqList.Merge(dst, src)
}
func (m *ProreqList) XXX_Size() int {
	return xxx_messageInfo_ProreqList.Size(m)
}
func (m *ProreqList) XXX_DiscardUnknown() {
	xxx_messageInfo_ProreqList.DiscardUnknown(m)
}

var xxx_messageInfo_ProreqList proto.InternalMessageInfo

func (m *ProreqList) GetReq() []*Proreq {
	if m != nil {
		return m.Req
	}
	return nil
}

type UserId struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_75fc1a8a594214fa, []int{4}
}
func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (dst *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(dst, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Judge struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TxId                 string   `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Res                  bool     `protobuf:"varint,3,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Judge) Reset()         { *m = Judge{} }
func (m *Judge) String() string { return proto.CompactTextString(m) }
func (*Judge) ProtoMessage()    {}
func (*Judge) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_75fc1a8a594214fa, []int{5}
}
func (m *Judge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Judge.Unmarshal(m, b)
}
func (m *Judge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Judge.Marshal(b, m, deterministic)
}
func (dst *Judge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Judge.Merge(dst, src)
}
func (m *Judge) XXX_Size() int {
	return xxx_messageInfo_Judge.Size(m)
}
func (m *Judge) XXX_DiscardUnknown() {
	xxx_messageInfo_Judge.DiscardUnknown(m)
}

var xxx_messageInfo_Judge proto.InternalMessageInfo

func (m *Judge) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Judge) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Judge) GetRes() bool {
	if m != nil {
		return m.Res
	}
	return false
}

func init() {
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*Proreq)(nil), "proto.Proreq")
	proto.RegisterType((*Status)(nil), "proto.Status")
	proto.RegisterType((*ProreqList)(nil), "proto.ProreqList")
	proto.RegisterType((*UserId)(nil), "proto.UserId")
	proto.RegisterType((*Judge)(nil), "proto.Judge")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TsukuproClient is the client API for Tsukupro service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TsukuproClient interface {
	NewUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Status, error)
	EditProf(ctx context.Context, in *Proreq, opts ...grpc.CallOption) (*Status, error)
	SearchProf(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*ProreqList, error)
}

type tsukuproClient struct {
	cc *grpc.ClientConn
}

func NewTsukuproClient(cc *grpc.ClientConn) TsukuproClient {
	return &tsukuproClient{cc}
}

func (c *tsukuproClient) NewUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/proto.Tsukupro/NewUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tsukuproClient) EditProf(ctx context.Context, in *Proreq, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/proto.Tsukupro/EditProf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tsukuproClient) SearchProf(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*ProreqList, error) {
	out := new(ProreqList)
	err := c.cc.Invoke(ctx, "/proto.Tsukupro/SearchProf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TsukuproServer is the server API for Tsukupro service.
type TsukuproServer interface {
	NewUser(context.Context, *User) (*Status, error)
	EditProf(context.Context, *Proreq) (*Status, error)
	SearchProf(context.Context, *UserId) (*ProreqList, error)
}

func RegisterTsukuproServer(s *grpc.Server, srv TsukuproServer) {
	s.RegisterService(&_Tsukupro_serviceDesc, srv)
}

func _Tsukupro_NewUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TsukuproServer).NewUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Tsukupro/NewUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TsukuproServer).NewUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tsukupro_EditProf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Proreq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TsukuproServer).EditProf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Tsukupro/EditProf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TsukuproServer).EditProf(ctx, req.(*Proreq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tsukupro_SearchProf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TsukuproServer).SearchProf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Tsukupro/SearchProf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TsukuproServer).SearchProf(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tsukupro_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Tsukupro",
	HandlerType: (*TsukuproServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewUser",
			Handler:    _Tsukupro_NewUser_Handler,
		},
		{
			MethodName: "EditProf",
			Handler:    _Tsukupro_EditProf_Handler,
		},
		{
			MethodName: "SearchProf",
			Handler:    _Tsukupro_SearchProf_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_75fc1a8a594214fa) }

var fileDescriptor_user_75fc1a8a594214fa = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xd1, 0x4a, 0xfb, 0x30,
	0x14, 0xc6, 0x97, 0xae, 0xe9, 0xb6, 0xb3, 0xff, 0x5f, 0x34, 0x0a, 0x86, 0xdd, 0x58, 0x72, 0x63,
	0x11, 0x1c, 0x32, 0x9f, 0x41, 0x64, 0x22, 0x32, 0x32, 0x77, 0xab, 0x64, 0x26, 0x6e, 0x45, 0x66,
	0xbb, 0x24, 0xc5, 0xf9, 0x18, 0xbe, 0xb1, 0x24, 0x59, 0xc7, 0xaa, 0x78, 0xd5, 0xf3, 0x9d, 0x93,
	0x9e, 0xef, 0xfb, 0x1d, 0x80, 0xca, 0x28, 0x3d, 0x2c, 0x75, 0x61, 0x0b, 0x82, 0xfd, 0x87, 0x8d,
	0x21, 0x9e, 0x19, 0xa5, 0xc9, 0x29, 0x74, 0xdc, 0xf0, 0x39, 0x97, 0x14, 0xa5, 0x28, 0xc3, 0x3c,
	0x71, 0x72, 0x2c, 0x09, 0x81, 0xf8, 0x5d, 0xac, 0x14, 0x8d, 0x52, 0x94, 0xf5, 0xb8, 0xaf, 0xc9,
	0x09, 0xe0, 0x79, 0xae, 0xed, 0x92, 0xb6, 0x7d, 0x33, 0x08, 0xf6, 0x04, 0xc9, 0x44, 0x17, 0x5a,
	0xad, 0xc9, 0x31, 0x60, 0xbb, 0xa9, 0x57, 0xf5, 0x78, 0x6c, 0x37, 0x63, 0xb9, 0xef, 0x10, 0xfd,
	0x74, 0xb0, 0x9f, 0xa5, 0xf2, 0xcb, 0x30, 0xf7, 0xb5, 0xeb, 0x49, 0x61, 0x05, 0x8d, 0x53, 0x94,
	0xfd, 0xe3, 0xbe, 0x66, 0x0c, 0x92, 0xa9, 0x15, 0xb6, 0x32, 0x84, 0x42, 0x67, 0xa5, 0x8c, 0x11,
	0x0b, 0xb5, 0x75, 0xa8, 0x25, 0xbb, 0x04, 0x08, 0x19, 0xee, 0x73, 0x63, 0xc9, 0x19, 0xb4, 0xb5,
	0x5a, 0x53, 0x94, 0xb6, 0xb3, 0xfe, 0xe8, 0x7f, 0x00, 0x1f, 0x86, 0x39, 0x77, 0x13, 0x46, 0x21,
	0x99, 0x85, 0x10, 0x07, 0x10, 0xed, 0xd0, 0xa3, 0x5c, 0xb2, 0x5b, 0xc0, 0x77, 0x95, 0x5c, 0xa8,
	0xbf, 0x0f, 0xb3, 0x83, 0x8c, 0xf6, 0x20, 0x0f, 0x9d, 0xa3, 0xf1, 0x28, 0x5d, 0x67, 0x61, 0x46,
	0x5f, 0x08, 0xba, 0x8f, 0xa6, 0x7a, 0xab, 0x4a, 0x5d, 0x90, 0x73, 0xe8, 0x3c, 0xa8, 0x0f, 0x7f,
	0xf0, 0xfe, 0x36, 0x8e, 0x13, 0x83, 0x3a, 0x5b, 0xe0, 0x63, 0x2d, 0x72, 0x01, 0xdd, 0x1b, 0x99,
	0xdb, 0x89, 0x2e, 0x5e, 0x49, 0x33, 0xf8, 0xef, 0xb7, 0x57, 0x00, 0x53, 0x25, 0xf4, 0xcb, 0xb2,
	0xf1, 0x3a, 0x70, 0x0d, 0x8e, 0x1a, 0x3f, 0xbb, 0xab, 0xb0, 0xd6, 0x3c, 0xf1, 0xbd, 0xeb, 0xef,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x94, 0x1a, 0x34, 0xc7, 0x10, 0x02, 0x00, 0x00,
}
